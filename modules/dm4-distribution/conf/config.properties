### DeepaMehta Configuration ###


## Webserver ##

org.osgi.service.http.port = ${org.osgi.service.http.port}
org.apache.felix.http.enable = ${org.apache.felix.http.enable}

# Session timeout in minutes. Set 0 for no timeout.
org.apache.felix.http.session.timeout = ${org.apache.felix.http.session.timeout}

# HTTPS
org.osgi.service.http.port.secure = ${org.osgi.service.http.port.secure}

# To enable HTTPS set this to "true"
org.apache.felix.https.enable = ${org.apache.felix.https.enable}

# The **Keystore Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.password = ${org.apache.felix.https.keystore.password}

# The **Key Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.key.password = ${org.apache.felix.https.keystore.key.password}

# WebSockets
# Note: to use WebSockets the dm4-websockets module must be installed

# The port the WebSocket server opens for accepting connections
dm4.websockets.port = ${dm4.websockets.port}

# The URL the WebSocket clients use to connect to the WebSocket server
dm4.websockets.url = ${dm4.websockets.url}


## Request Filter ##

# Filter for anonymous read (that is GET) requests.
# "ALL" allows all anonymous read requests. This is the default.
# "NONE" allows no anonymous read requests.
# To allow specific anonymous read requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dm4.security.anonymous_read_allowed = ${dm4.security.anonymous_read_allowed}

# Filter for anonymous write (that is POST, PUT, DELETE) requests.
# "ALL" allows all anonymous write requests.
# "NONE" allows no anonymous write requests. This is the default.
# To allow specific anonymous write requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dm4.security.anonymous_write_allowed = ${dm4.security.anonymous_write_allowed}

# Requests are allowed from this subnet only.
# An address range denoted by network number and netmask.
# To allow local access only set "127.0.0.1/32". This is the default.
# To allow global access set "0.0.0.0/0".
dm4.security.subnet_filter = ${dm4.security.subnet_filter}


## User Accounts ##

# The initial password for the "admin" user account.
# Note: this setting is only evaluated while the first DeepaMehta start.
# Once started the admin password can be changed interactively (using the Webclient).
dm4.security.initial_admin_password = ${dm4.security.initial_admin_password}

# If true newly created user accounts are enabled instantly. This is the default.
# If false user accounts must be manually enabled by an administrator (using the Webclient).
dm4.security.new_accounts_are_enabled = ${dm4.security.new_accounts_are_enabled}

# LDAP
dm4.ldap.server = ${dm4.ldap.server}
dm4.ldap.port = ${dm4.ldap.port}
dm4.ldap.manager = ${dm4.ldap.manager}
dm4.ldap.password = ${dm4.ldap.password}
dm4.ldap.user_base = ${dm4.ldap.user_base}
dm4.ldap.user_attribute = ${dm4.ldap.user_attribute}
dm4.ldap.filter = ${dm4.ldap.filter}


## Workspace Sharing Modes ##

# When a user creates a workspace only the enabled sharing modes will be available.
# By default all sharing modes are enabled.
# Note: individual (per-user) sharing modes can be configured by an administrator (using the Webclient).
dm4.workspaces.private.enabled = ${dm4.workspaces.private.enabled}
dm4.workspaces.confidential.enabled = ${dm4.workspaces.confidential.enabled}
dm4.workspaces.collaborative.enabled = ${dm4.workspaces.collaborative.enabled}
dm4.workspaces.public.enabled = ${dm4.workspaces.public.enabled}
dm4.workspaces.common.enabled = ${dm4.workspaces.common.enabled}


## File Repository ##

# The file repository's base path: an absolute path leading to a directory, *no* slash at the end.
# This directory must exist. To enable the entire file system set "/". This is the default.
dm4.filerepo.path = ${dm4.filerepo.path}

# Set to "true" to put the file repository under access control.
# DM then creates a separate file repository for each workspace beneath the base path.
# This allow for e.g. private and collaborative file repositories.
# If set to "false" (the default) there is one big public file repository shared by all users.
# Use this also for a single-user DeepaMehta installation.
dm4.filerepo.per_workspace = ${dm4.filerepo.per_workspace}

# Standard disk quota (for file uploads) allocated to each user (in MB).
# Set -1 for no disk quota (unlimited uploads). This is the default.
# Note: individual (per-user) disk quotas can be configured by an administrator (using the Webclient).
dm4.filerepo.disk_quota = ${dm4.filerepo.disk_quota}


## Hot Deployment ##

# DeepaMehta plugins (jar files) from this directory are hot deployed (like any other OSGi bundle).
# You can add further directories here, separated by comma. Also you can remove the standard directory
# ("bundle-deploy") if you like.
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
felix.fileinstall.dir = ${felix.fileinstall.dir}


## Host ##

# The URL (protocol, host, port) this DeepaMehta installation is accessible from "outside".
# Some DeepaMehta plugins make use of this value when creating public DeepaMehta URLs.
# This setting is of particular interest when DeepaMehta runs behind a reverse proxy.
dm4.host.url = ${dm4.host.url}


## Webservice ##

# Only these 2 values are supported:
#     /     For use with Apache Felix HTTP (the default)
#     /*    For use with OPS4J Pax Web
dm4.webservice.path = ${dm4.webservice.path}


## Database ##

dm4.database.path = ${dm4.database.path}


## Logging ##

java.util.logging.config.file = ${java.util.logging.config.file}

# To see any Felix/File Install logging set the level to at least 4
felix.log.level = ${felix.log.level}
felix.fileinstall.log.level = ${felix.fileinstall.log.level}


## Encoding ##

file.encoding = UTF-8


## OSGi Runtime ##

felix.auto.deploy.action = install,start
org.osgi.framework.storage = bundle-cache
org.osgi.framework.system.capabilities.extra = osgi.ee;\
    osgi.ee="JavaSE";\
    version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8"
org.osgi.framework.system.packages.extra = \
    javax.activation,\
    javax.annotation.processing,\
    javax.imageio,\
    javax.imageio.spi,\
    javax.imageio.stream,\
    javax.lang.model,\
    javax.lang.model.element,\
    javax.lang.model.type,\
    javax.lang.model.util,\
    javax.management,\
    javax.management.modelmbean,\
    javax.management.remote,\
    javax.naming,\
    javax.net.ssl,\
    javax.security.auth,\
    javax.security.cert,\
    javax.tools,\
    javax.xml.datatype,\
    javax.xml.namespace,\
    javax.xml.parsers,\
    javax.xml.stream,\
    javax.xml.stream.events,\
    javax.xml.stream.util,\
    javax.xml.transform,\
    javax.xml.transform.dom,\
    javax.xml.transform.sax,\
    javax.xml.transform.stream,\
    javax.xml.validation,\
    org.w3c.dom,\
    org.xml.sax,\
    org.xml.sax.ext,\
    org.xml.sax.helpers
